*zenn_dev.txt* A Vim plugin to manage Zenn.dev denops.vim
                                        *zenn_dev* *denops-zenn_dev.txt*

Author: kyoh86 <me@kyoh86.dev>
License: MIT License


==============================================================================
                                                           *zenn_dev-contents*
Contents ~

Install           |zenn_dev-install|
Setup             |zenn_dev-setup|
Function          |zenn_dev-function|
API               |zenn_dev-api|
Commands          |zenn_dev-commands|
Denops commands   |zenn_dev-denops-commands|


==============================================================================
                                                            *zenn_dev-install*
Install ~

You need to install |denops.vim| as a dependency.

* vim-denops/denops.vim https://github.com/vim-denops/denops.vim


==============================================================================
                                                              *zenn_dev-setup*
Setup ~

You can setup this plugin by calling |zenn_dev#setup#commands()| and
|zenn_dev#setup#params()| function.


==============================================================================
                                                           *zenn_dev-function*
Function ~

                                                   *zenn_dev#setup#commands()*
zenn_dev#setup#commands()

	Prepares the commands for |zenn_dev-commands|.
	If you don't call this one, any commands will not be available.

                                                     *zenn_dev#setup#params()*
zenn_dev#setup#params({api-params})

	You may set the parameters for denops API in advance.
	All of commands and functions in this plugin will use the API.
	So they will use the parameters you set here.

	{api-params} is a dictionary with the function name as a key and the
	parameters dictionary as a value.

	Example: >
		call zenn_dev#setup#params({
			\ 'new_article': {
			\	'slug': 'my-article',
			\	'title': 'My Article',
			\ }})

		call zenn_dev#if#new_article({})
		-- It may create a new article with the slug "my-article" and
		the title "My Article".
<

zenn_dev#if#init({params})
	Not implemented yet.
                                                   *zenn_dev#if#new_article()*
zenn_dev#if#new_article({params})

	Create new article.

	{params} is a dictionary with the following keys:
		- slug: string (default: "")
		- title: string (default: "")
		- type: string (default: "tech")
		- emoji: string (default: "")
		- published: boolean (default: false)
		- publicationName: string (default: "")

		  ...And some common parameters for Deno execution.
		  See |zenn_dev-common-params| for details.

zenn_dev#if#new_book({params})
	Not implemented yet.


zenn_dev#if#list_articles({params})
	Not implemented yet.


zenn_dev#if#list_books({params})
	Not implemented yet.


zenn_dev#if#preview({params})
	Not implemented yet.


==============================================================================
                                                           *zenn_dev-commands*
Commands ~

If you call |zenn_dev#setup#command()| with "commands" option, you can use the
follwing commands.

:ZennDevInit
	Not implemented yet.

                                      *ZennDevNewArticle* *:ZennDevNewArticle*
:ZennDevNewArticle

	Create new article.

	Deno Execution Options:
		- ++deno-executable=<deno-executable>: Deno executable path
		- ++deno-run-args=<deno-run-args>: Deno run arguments
		- ++cwd=<cwd>: Current working directory
		- ++clear-env: Clear environment variables
		- ++uid=<uid>: User ID
		- ++gid=<gid>: Group ID

	Optional flags:
		- --slug=<slug> (default: "")
		- --title=<title> (default: "")
		- --type=<type> (default: "tech")
		- --emoji=<emoji>: a single emoji charactor (default: "")
		- --published (default: false)
		- --publication-name=<publication-name> (default: "")


:ZennDevNewBook
	Not implemented yet.

:ZennDevListArticles
	Not implemented yet.

:ZennDevListBooks
	Not implemented yet.

:ZennDevPreview
	Not implemented yet.

==============================================================================
                                                                *zenn_dev-api*
API ~

There are some denops functions to interact with Zenn.dev.

init({params})
	Not implemented yet.

                                                  *zenn_dev-api-new_article()*
newArticle({params})

	Create new article.

	{params} is a dictionary with the following keys:
		- slug: string (default: "")
		- title: string (default: "")
		- type: string (default: "tech")
		- emoji: string (default: "")
		- published: boolean (default: false)
		- publicationName: string (default: "")

		  ...And some common parameters for Deno execution.
		  See |zenn_dev-common-params| for details.

newBook({params})
	Not implemented yet.

listArticles({params})
	Not implemented yet.

listBooks({params})
	Not implemented yet.

preview({params})
	Not implemented yet.


==============================================================================
                                                      *zenn_dev-common-params*
Common Parameters ~

All of the functions and APIs in this plugin will use the following parameters.

	- denoExecutable: string (default: "deno")
	- denoRunArgs: string[] (default: [])
	- cwd: string (default: "")
	- clearEnv: boolean (default: false)
	- uid: number (default: -1)
	- gid: number (default: -1)


==============================================================================
" vim:tw=78:ts=8:sw=8:ft=help:norl:noet:fen:
